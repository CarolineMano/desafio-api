// <auto-generated />
using System;
using CADASTRO.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CADASTRO.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211223143058_CreateData")]
    partial class CreateData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("CADASTRO.Models.DadoSensivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DadosSensiveis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "12345678900",
                            Endereco = "Rua Inventada 1, nº 39, São Paulo",
                            Telefone = "1133964628"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "98765432100",
                            Endereco = "Praça Floriano s/nº, Rio de Janeiro",
                            Telefone = "2138142735"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "98765412345",
                            Endereco = "Rua Inventada 2, nº 50, Maceió",
                            Telefone = "8298741235"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "98765432100",
                            Endereco = "Praça Sem Nome s/nº, Campo Grande",
                            Telefone = "6732156984"
                        },
                        new
                        {
                            Id = 5,
                            Cpf = "85236974158",
                            Endereco = "Av. L. Viana Filho, nº 6462, Salvador",
                            Telefone = "7133036390"
                        },
                        new
                        {
                            Id = 6,
                            Cpf = "74114736965",
                            Endereco = "Av. João Baptista Parra, nº 673, Vitória",
                            Telefone = "2733031156"
                        },
                        new
                        {
                            Id = 7,
                            Cpf = "89636974158",
                            Endereco = "Brasília",
                            Telefone = "6133036390"
                        },
                        new
                        {
                            Id = 8,
                            Cpf = "74119126965",
                            Endereco = "São Bernardo do Campo",
                            Telefone = "1133031156"
                        },
                        new
                        {
                            Id = 9,
                            Cpf = "26533296417",
                            Endereco = "Rua Inventada 5, nº 10, São Paranapanema",
                            Telefone = "1169325478"
                        },
                        new
                        {
                            Id = 10,
                            Cpf = "96658821247",
                            Endereco = "Praça X, nº 11, Iracemápolis",
                            Telefone = "1745632857"
                        },
                        new
                        {
                            Id = 11,
                            Cpf = "11236254987",
                            Endereco = "Rua x, Brasília",
                            Telefone = "6132574589"
                        },
                        new
                        {
                            Id = 12,
                            Cpf = "88563101270",
                            Endereco = "Rua Y, Brasília",
                            Telefone = "6120254511"
                        },
                        new
                        {
                            Id = 13,
                            Cpf = "14744522369",
                            Endereco = "Rua Inventada 10, nº 50, Taboão da Serra",
                            Telefone = "1122325247"
                        },
                        new
                        {
                            Id = 14,
                            Cpf = "00215985512",
                            Endereco = "Praça Sem Nome s/nº, São Paulo",
                            Telefone = "1125229897"
                        },
                        new
                        {
                            Id = 15,
                            Cpf = "99658742312",
                            Endereco = "Av. Inventada 10, nº 22, Criciúma",
                            Telefone = "4853326964"
                        },
                        new
                        {
                            Id = 16,
                            Cpf = "11235789611",
                            Endereco = "Av. Y, nº 40, Belo Horizonte",
                            Telefone = "6132155964"
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.DeputadoEstadual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<bool>("Processo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("DeputadosEstaduais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadosSensiveisId = 13,
                            Estado = "São Paulo",
                            Foto = "AnaliceFernandes.jpg",
                            Nome = "Analice Fernandes",
                            PartidoId = 3,
                            Processo = false,
                            ProjetosDeLei = 29
                        },
                        new
                        {
                            Id = 2,
                            DadosSensiveisId = 14,
                            Estado = "São Paulo",
                            Foto = "CoronelTelhada.jpg",
                            Nome = "Coronel Telhada",
                            PartidoId = 4,
                            Processo = false,
                            ProjetosDeLei = 31
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.DeputadoFederal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<bool>("Processo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("DeputadosFederais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadosSensiveisId = 15,
                            Estado = "Santa Catarina",
                            Foto = "GeovaniaDeSa.jpg",
                            Nome = "Geovania de Sá",
                            PartidoId = 3,
                            Processo = false,
                            ProjetosDeLei = 45
                        },
                        new
                        {
                            Id = 2,
                            DadosSensiveisId = 16,
                            Estado = "Minas Gerais",
                            Foto = "AecioNeves.jpg",
                            Nome = "Aécio Neves da Cunha",
                            PartidoId = 3,
                            Processo = true,
                            ProjetosDeLei = 36
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.Governador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<bool>("Processo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Governadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadosSensiveisId = 3,
                            Estado = "Alagoas",
                            Foto = "RenanFilho.jpg",
                            Nome = "Renan Filho",
                            PartidoId = 1,
                            Processo = false,
                            ProjetosDeLei = 11
                        },
                        new
                        {
                            Id = 2,
                            DadosSensiveisId = 4,
                            Estado = "Mato Grosso do Sul",
                            Foto = "ReinaldoAzambuja.jpg",
                            Nome = "Reinaldo Azambuja",
                            PartidoId = 3,
                            Processo = false,
                            ProjetosDeLei = 26
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.LiderPartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lideres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Isnaldo Bulhões Jr."
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bohn Gass"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Rodrigo de Castro"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Cacá Leão"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Wolney Queiroz"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Nivaldo Albuquerque"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Efraim Filho"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Wellington Roberto"
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.MinistroDeEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<string>("Pasta")
                        .HasColumnType("longtext");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("MinistrosDeEstado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadosSensiveisId = 11,
                            Foto = "TerezaCristina.jpg",
                            Nome = "Tereza Cristina",
                            PartidoId = 7,
                            Pasta = "Agricultura, Pecuária e Abastecimento",
                            ProjetosDeLei = 22
                        },
                        new
                        {
                            Id = 2,
                            DadosSensiveisId = 12,
                            Foto = "OnyxLorenzoni.jpg",
                            Nome = "Onyx Lorenzoni",
                            PartidoId = 7,
                            Pasta = "Trabalho e Previdência",
                            ProjetosDeLei = 36
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroPartido")
                        .HasColumnType("int");

                    b.Property<string>("Sigla")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Partidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Movimento Democrático Brasileiro",
                            NumeroPartido = 15,
                            Sigla = "MDB"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Partido dos Trabalhadores",
                            NumeroPartido = 13,
                            Sigla = "PT"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Partido da Social Democracia Brasileira",
                            NumeroPartido = 45,
                            Sigla = "PSDB"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Progressistas",
                            NumeroPartido = 11,
                            Sigla = "PP"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Partido Democrático Trabalhista",
                            NumeroPartido = 12,
                            Sigla = "PDT"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Partido Trabalhista Brasileiro",
                            NumeroPartido = 14,
                            Sigla = "PTB"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Democratas",
                            NumeroPartido = 25,
                            Sigla = "DEM"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Partido Liberal",
                            NumeroPartido = 22,
                            Sigla = "PL"
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.Prefeito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Prefeitos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "Paranapanema",
                            DadosSensiveisId = 9,
                            Estado = "São Paulo",
                            Foto = "RodolfoFanganiello.jpg",
                            Nome = "Rodolfo Hessel Fanganiello",
                            PartidoId = 4,
                            ProjetosDeLei = 33
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "Iracemápolis",
                            DadosSensiveisId = 10,
                            Estado = "São Paulo",
                            Foto = "NelitaMichel.jpg",
                            Nome = "Nelita Cristina Michel Franceschini",
                            PartidoId = 8,
                            ProjetosDeLei = 26
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.Presidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Presidentes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadosSensiveisId = 7,
                            Foto = "JairBolsonaro.jpg",
                            Nome = "Jair Bolsonaro",
                            PartidoId = 8,
                            ProjetosDeLei = 35
                        },
                        new
                        {
                            Id = 2,
                            DadosSensiveisId = 8,
                            Foto = "LulaDaSilva.jpg",
                            Nome = "Luiz Inácio Lula da Silva",
                            PartidoId = 2,
                            ProjetosDeLei = 36
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.Senador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Senadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadosSensiveisId = 5,
                            Estado = "Bahia",
                            Foto = "JaquesWagner.jpg",
                            Nome = "Jaques Wagner",
                            PartidoId = 2,
                            ProjetosDeLei = 23
                        },
                        new
                        {
                            Id = 2,
                            DadosSensiveisId = 6,
                            Estado = "Espírito Santo",
                            Foto = "RoseDeFreitas.jpg",
                            Nome = "Rose de Freitas",
                            PartidoId = 1,
                            ProjetosDeLei = 26
                        });
                });

            modelBuilder.Entity("CADASTRO.Models.Vereador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<int>("DadosSensiveisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<bool>("Processo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProjetosDeLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosSensiveisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Vereadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "São Paulo",
                            DadosSensiveisId = 1,
                            Estado = "São Paulo",
                            Foto = "AdilsonAmadeu.jpg",
                            Nome = "Adilson Amadeu",
                            PartidoId = 7,
                            Processo = true,
                            ProjetosDeLei = 15
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "Rio de Janeiro",
                            DadosSensiveisId = 2,
                            Estado = "Rio de Janeiro",
                            Foto = "LindberghFarias.jpg",
                            Nome = "Lindbergh Farias",
                            PartidoId = 2,
                            Processo = true,
                            ProjetosDeLei = 26
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "b0447b1c-5906-4d7a-9487-12b95ccfae00",
                            ConcurrencyStamp = "a02921b7-d714-4cc4-a9c5-69c6c1447f14",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "58f4c99a-fabd-4946-bc52-34416a856353",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3631804-984a-4046-972f-6cc71228b1e4",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAENswB4IyRHdfCl+O5SPkO0S0rdM0JchwYmMvW8lpdw0+DUDVq6XY+NEZVR9IzHWyQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "08fa86bb-b244-4651-a128-8eb9694ffbcd",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "58f4c99a-fabd-4946-bc52-34416a856353",
                            RoleId = "b0447b1c-5906-4d7a-9487-12b95ccfae00"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CADASTRO.Models.DeputadoEstadual", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.DeputadoFederal", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.Governador", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.MinistroDeEstado", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.Prefeito", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.Presidente", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.Senador", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("CADASTRO.Models.Vereador", b =>
                {
                    b.HasOne("CADASTRO.Models.DadoSensivel", "DadosSensiveis")
                        .WithMany()
                        .HasForeignKey("DadosSensiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CADASTRO.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId");

                    b.Navigation("DadosSensiveis");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
